%FILE internal/sql-32.html
%LASTMOD
%KEY pgsql-sql32

%TITLE データの更新	UPDATE

<pre>
[<書式>]

[ WITH [ RECURSIVE ] with_query [, ...] ]
UPDATE [ ONLY ] table_name [ * ] [ [ AS ] alias ]
    SET { column_name = { expression | DEFAULT } |
          ( column_name [, ...] ) = ( { expression | DEFAULT } [, ...] ) |
          ( column_name [, ...] ) = ( sub-SELECT )
        } [, ...]
    [ FROM from_list ]
    [ WHERE condition | WHERE CURRENT OF cursor_name ]
    [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ]


==============================================================
パラメータ		説明
==============================================================
table_name		データを更新するテーブル名
alias			テーブルの別名を指定。バージョン8.2から
column_name		テーブルのカラム名
expression		カラムに代入する値、または式
==============================================================

==============================================================
句				説明
==============================================================
WITH句				WITH句については[<6-21>]参照
FROM from_list			FROM句で利用するテーブル名
sub-SELECT			サブクエリー。バージョン9.5から
WHERE condition			WHERE句による更新レコード指定の条件。サブクエリも使用可
WHERE CURRENT OF cursor_name	カーソルcursor_nameから最近取り出した1レコードを更新する。バージョン8.3から
RETURNING　output_expression	更新後の結果を表示する。バージョン8.2から
==============================================================

==============================================================
オプション	説明
==============================================================
ONLY		継承先のデータを更新しない。詳細は[<6-06>]
DEFAULT		そのカラムのデフォルト値に更新する。デフォルト値が設定されていない場合はNULL
==============================================================
</pre>

%CHAPTER 解説

<p>
UPDATE文でテーブルのデータを更新します。バージョン9.3からビューも更新できます。詳細は[<6-36>]を参照してください。
<br>
UPDATE文の実行にはそのテーブルのUPDATE権限が必要です(権限表示はメタコマンド\z)。
</p>

<p>
バージョン8.2からRETURNING句で更新結果を表示できます。使い方は実行例を参照してください。
</p>

<p>
バージョン8.3から、カーソルで最近取り出した1レコードを更新できます。
使用例はカーソル[<6-39>]を参照してください。
</p>

%CHAPTER 実行例

<p>
次の条件「価格(price) が100円未満、もしくは商品名(name)が'pen' の場合、価格を100円に」を満たすレコードを更新します。
</p>

<pre>
sampledb=# SELECT name, price FROM itemlist;
   name   | price 
----------+-------
 pen      |   100
 notebook |   120
 eraser   |    72
(3 rows)

sampledb=# UPDATE itemlist SET price = 100 WHERE price < 100 OR name = 'pen';
UPDATE 2

sampledb=# SELECT name, price FROM itemlist;
   name   | price 
----------+-------
 notebook |   120
 pen      |   100
 eraser   |   100
(3 rows)
</pre>


<p>
・サブクエリ
<br>
UPDATE文のWHERE句にはサブクエリ([<6-29>]参照)が使えます。
<br>
例として、テーブルmakerlistに含まれるデータをもとに、テーブルitemlistのデータを更新します。
具体的にはSmythson社製品の価格を10%値上げします。
</p>

<pre>
sampledb=# SELECT * FROM itemlist;
 id |   name   | price | makercode 
----+----------+-------+-----------
  1 | pen      |   100 |        10
  2 | notebook |   120 |        20
  3 | eraser   |    72 |        10
(3 rows)

sampledb=# SELECT * FROM makerlist;
 id |   name   
----+----------
 10 | Smythson
 20 | Rotring
(2 rows)
</pre>

<p>
ここで次のUPDATE文を実行すると、Smythson社の製品のみ、価格を10%値上げされます。
</p>

<pre>
sampledb=# UPDATE itemlist SET price = price * 1.1
sampledb-#         WHERE makercode IN
sampledb-#         (SELECT id FROM makerlist WHERE name = 'Smythson');
UPDATE 2

sampledb=# SELECT * FROM itemlist;
 id |   name   | price | makercode 
----+----------+-------+-----------
  2 | notebook |   120 |        20
  1 | pen      |   110 |        10
  3 | eraser   |    79 |        10
(3 rows)
</pre>

<p>
・FROM句
<br>
前述のサブクエリを使ったUPDATE文を、FROM句を使って書き換えます。
</p>

<pre>
sampledb=# UPDATE itemlist SET price = price * 1.1
sampledb-#     FROM makerlist
sampledb-#          WHERE makerlist.id = itemlist.makercode
sampledb-#          AND makerlist.name = 'Smythson';
UPDATE 2

sampledb=# SELECT * FROM itemlist;
 id |   name   | price | makercode 
----+----------+-------+-----------
  2 | notebook |   120 |        20
  1 | pen      |   110 |        10
  3 | eraser   |    79 |        10
(3 rows)
</pre>
