%FILE internal/sql-17.html
%LASTMOD
%KEY pgsql-sql17

%TITLE データの検索	SELECT


<pre>
diff s92 s95
###6c6
###<     [ GROUP BY expression [, ...] ]
###---
###>     [ GROUP BY grouping_element [, ...] ]
###14c14
###<     [ FOR { UPDATE | SHARE } [ OF table_name [, ...] ] [ NOWAIT ] [...] ]
###---
###>     [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]

20c20,21
<     ( select ) [ AS ] alias [ ( column_alias [, ...] ) ]
---
>                 [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]
>     [ LATERAL ] ( select ) [ AS ] alias [ ( column_alias [, ...] ) ]
22,23c23,28
<     function_name ( [ argument [, ...] ] ) [ AS ] alias [ ( column_alias [, ...] | column_definition [, ...] ) ]
<     function_name ( [ argument [, ...] ] ) AS ( column_definition [, ...] )
---
>     [ LATERAL ] function_name ( [ argument [, ...] ] )
>                 [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
>     [ LATERAL ] function_name ( [ argument [, ...] ] ) [ AS ] alias ( column_definition [, ...] )
>     [ LATERAL ] function_name ( [ argument [, ...] ] ) AS ( column_definition [, ...] )
>     [ LATERAL ] ROWS FROM( function_name ( [ argument [, ...] ] ) [ AS ( column_definition [, ...] ) ] [, ...] )
>                 [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
###25a31,39
###> またgrouping_elementは以下のいずれかです。
###> 
###>     ( )
###>     expression
###>     ( expression [, ...] )
###>     ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )
###>     CUBE ( { expression | ( expression [, ...] ) } [, ...] )
###>     GROUPING SETS ( grouping_element [, ...] )

</pre>

<pre>
(1)  v9.3-> + NO KEY UPDATE + KEY SHARE
>  [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]

(2) v9.5  --> + SKIP LOCKED

(3) v9.5 --> GROUP BY:  expression --> grouping_elemnt
 またgrouping_elementは以下のいずれかです。
      ( )
     expression
     ( expression [, ...] )
     ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )
     CUBE ( { expression | ( expression [, ...] ) } [, ...] )
     GROUPING SETS ( grouping_element [, ...] )

(4) FROM

               [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]
    [ LATERAL ] function_name ( [ argument [, ...] ] )
                [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]

    [ LATERAL ] ROWS FROM( function_name ( [ argument [, ...] ] ) [ AS ( column_definition [, ...] ) ] [, ...] )
                [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]


</pre>


<pre>
[<書式>]

[ WITH [ RECURSIVE ] with_query [, ...] ]
SELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]
    * | expression [ [ AS ] output_name ] [, ...]
    [ FROM from_item [, ...] ]
    [ WHERE condition ]
    [ GROUP BY expression [, ...] ]
    [ HAVING condition [, ...] ]
    [ WINDOW window_name AS ( window_definition ) [, ...] ]
    [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]
    [ ORDER BY expression [ ASC | DESC | USING operator ] 
    [ NULLS { FIRST | LAST } ] [, ...] ]
    [ LIMIT { count | ALL } ]
    [ OFFSET start [ ROW | ROWS ] ]
    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]
    [ FOR { UPDATE | SHARE } [ OF table_name [, ...] ] [ NOWAIT ] [...] ]


・from_item
    [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
    [ LATERAL ] ( select ) [ AS ] alias [ ( column_alias [, ...] ) ]
    with_query_name [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
    [ LATERAL ] function_name ( [ argument [, ...] ] ) [ AS ] 
		  alias [ ( column_alias [, ...] | column_definition [, ...] ) ]
    [ LATERAL ]  function_name ( [ argument [, ...] ] ) AS ( column_definition [, ...] )
    from_item [ NATURAL ] join_type from_item 
          [ ON join_condition | USING ( join_column [, ...] ) ]

・with_query
    with_query_name [ ( column_name [, ...] ) ] 
            AS ( select | insert | update | delete )

TABLE [ ONLY ] table_name [ * ]
</pre>

%CHAPTER 解説

<p>
PostgreSQLのSELECT文はさまざまな句や述語をサポートしています。
[<表6-05>]に一覧を示します。
それぞれの句や述語と実行例は参照ページで解説します。
またサブクエリ(副問い合わせ)とCASE式も解説します。
</p>

<table border=1>
<caption> [<表6-05>] SELECT文がサポートする句/述語一覧</caption>
<tr bgcolor="#cccccc">
<th>句/述語</th>	<th>説明</th>		<th>参照</th>
</tr><tr>
<td>FROM</td>	<td>検索するテーブルなどを設定	</td>	<td>[<6-18>]</td>
</tr><tr>
<td>WHERE</td>	<td>検索の条件式を設定		</td>	<td>[<6-19>]</td>
</tr><tr>
<td>WINDOW、OVER</td>	<td>WINDOW関数による集計処理。バージョン8.4から</td>	<td>[<6-20>]</td>
</tr><tr>
<td>WITH</td>	<td>共通テーブル式(CTE:Common Table Expression)と再帰問い合わせ。バージョン8.4から</td>	<td>[<6-21>]</td>
</tr><tr>
<td>GROUP BY</td>	<td>検索結果のグループ化</td>	<td>[<6-22>]</td>
</tr><tr>
<td>HAVING</td>	<td>グループ化された結果の検索条件を設定</td>	<td>[<6-22>]</td>
</tr><tr>
<td>DISTINCT</td>	<td>重複レコードを削除	</td>	<td>[<6-23>]</td>
</tr><tr>
<td>JOIN</td>	<td>テーブルの結合</td>	<td>[<6-24>]</td>
</tr><tr>
<td>UNION, INTERSECT, EXCEPT</td>	<td>問い合わせの結合</td>	<td>[<6-25>]</td>
</tr><tr>
<td>ORDER BY</td>	<td>検索結果の出力順序を指定</td>	<td>[<6-26>]</td>
</tr><tr>
<td>LIMIT</td>	<td>検索結果の出力数を指定	</td>	<td>[<6-27>]</td>
</tr><tr>
<td>OFFSET</td>	<td>検索結果の出力開始位置を指定</td>	<td>[<6-27>]</td>
</tr><tr>
<td>FOR UPDATE</td>	<td>SELECT文で選択したレコードの排他的ロック  </td>	<td>[<6-28>]</td>
</tr><tr>
<td>FOR SHARE</td>	<td>SELECT文で選択したレコードの共有ロック   </td>	<td>[<6-28>]</td>
</tr><tr>
<td colspan=2 align=left>サブクエリ(副問い合わせ)</td>	<td>[<6-29>]</td>
</tr><tr>
<td colspan=2 align=left>CASE式</td>	<td>[<6-30>]</td>
</tr></table>

<br>

<p>
・TABLE文
<br>
TABLE文は簡略記述のために導入されました。
TABLE文は次のSELECT文と同じです。
</p>
<pre>
TABLE table_name <==> SELECT * FROM table_name
</pre>
