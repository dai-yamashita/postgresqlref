%FILE internal/sql-07.html
%LASTMOD
%KEY pgsql-sql07

%TITLE 問い合わせ結果から新しいテーブルを作成 / CREATE TABLE AS 

<pre>
[<書式>]

CREATE [ [ GLOBAL | LOCAL ] { TEMPORARY | TEMP } | UNLOGGED ] TABLE table_name
    [ (column_name [, ...] ) ]
    [ WITH ( storage_parameter [= value] [, ... ] ) | WITH OIDS | WITHOUT OIDS ]
    [ ON COMMIT { PRESERVE ROWS | DELETE ROWS | DROP } ]
    [ TABLESPACE tablespace ]
    AS query
    [ WITH [ NO ] DATA ]
				 (バージョン8.3から)


CREATE [ [ GLOBAL | LOCAL ] { TEMPORARY | TEMP } ] TABLE table_name 
    [ (column_name [, ...] ) ] [ [ WITH | WITHOUT ] OIDS ]
CREATE [ [ GLOBAL | LOCAL ] { TEMPORARY | TEMP } ] TABLE table_name
    AS query
				(バージョン8.2まで)

==================================================================
パラメータ	説明
==================================================================
table_name	作成するテーブル名
column_name	作成するテーブルのカラム名。指定しない場合は、問い合わせの出力カラム名
query		問い合わせ(SELECT文、もしくはEXECUTE文)
==================================================================

==================================================================
オプション		説明
==================================================================
LOCAL				SQL99標準との互換性のためサポート。無視する
GLOBAL				SQL99標準との互換性のためサポート。無視する
TEMPORARY, TEMP			一時テーブルとして作成(セッション終了で自動的に削除)
UNLOGGED				WALログを書き出さない。バージョン9.1から
WITH OIDS, WITHOUT OIDS	新しく作成するテーブルにOIDを設定するか否か、デフォルトは設定パラメータdefault_with_oidsの値
WITH (storage_parameter= value)	テーブルの格納パラメータを設定。詳細はCREATE TABLE([<6-05>])参照。バージョン8.3から
ON COMMIT PRESERVE ROWS		セッション終了時に一時テーブルを削除。デフォルト。バージョン8.3から
ON COMMIT DELETE ROWS		トランザクション終了時に一時テーブルの全レコードを削除。一時テーブルは残る。バージョン8.3から
ON COMMIT DROP			トランザクション終了時に一時テーブルを削除。バージョン8.3から
TABLESPACE tablespace		テーブルスペースtablespaceにテーブルを作成する。バージョン8.3から
WITH DATA			データも引き継ぐ。デフォルト。バージョン9.0から
WITH NO DATA			データを引き継がない。制約のないテーブル定義のみ。バージョン9.0から
==================================================================
</pre>

%CHAPTER 解説

<p>
問い合わせの結果から新しいテーブルを作成します。
新しいテーブルには元テーブルの定義とデータのみ引き継ぎます。
元テーブルの各種制約(PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES)は引き継ぎません。
</p>

%CHAPTER 実行例

<p>
テーブルorigから新しいテーブルnewを作成します。主キー制約やNOT NULL制約が引き継がれないことが確認できます。
</p>

<pre>
sampledb=# \d orig
     Table "public.orig"
 Column |  Type   | Modifiers 
--------+---------+-----------
 id     | integer | not null
 name   | text    | not null
Indexes:
    "orig_pkey" PRIMARY KEY, btree (id)

sampledb=# CREATE TABLE new AS SELECT * FROM orig;
SELECT 

sampledb=# \d new
      Table "public.new"
 Column |  Type   | Modifiers 
--------+---------+-----------
 id     | integer | 
 name   | text    | 
</pre>

