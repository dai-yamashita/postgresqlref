%FILE internal/ope-09.html
%LASTMOD
%KEY pgsql-ope-09

%TITLE JSON型演算子

[< JSON型演算子>]

<pre>
JSON/JSONB共通

演算子	右オペランド型	説明								例				                    例の結果

->	int		JSON配列要素を取得（添字は0から、負数は後ろから）		'[{"a":"foo"},{"b":"bar"},{"c":"baz"}]'::json->1    {"b":"bar"}
->	text		指定したキーのJSONオブジェクトを返す				'{"a": {"b":"foo"}}'::json->'a'			    {"b":"foo"}
->>	int		指定したindexの配列要素をtextとして返す				'[0,10,20,30]'::json->>2			   20
->>	text		指定したキーのJSON オブジェクトをtextとして返す			'{"a": {"b":"foo"}}'::json->>'a'		   {"b":"foo"}
#>	text[]		指定されたパスにあるJSONオブジェクトを返す			'{"a": {"b":{"c": "foo"}}}'::json#>'{a,b}'	    {"c": "foo"}
#>>	text[]		指定されたパスにあるJSONオブジェクトをtextとして返す		'{"a": {"b":{"c": "foo"}}}'::json#>>'{a,b}'	    {"c": "foo"}

</pre>


<pre>
JSONBのみ

演算子	右オペランド型	説明	例

@>	jsonb		左側の値は、指定した右側のJSONパスまたは値を包含するか		'{"a":1, "b":2}'::jsonb @> '{"b":2}'::jsonb           true
<@	jsonb		左のJSONパスまたは値は右のJSON値にトップレベルで包含されるか		'{"b":2}'::jsonb <@ '{"a":1, "b":2}'::jsonb

?	text		文字列はJSON値のトップレベルのキーとして存在するか			'{"a":1, "b":2}'::jsonb ? 'b'
?|	text[]		配列の文字列のいずれかがトップレベルのキーとして存在するか。		'{"a":1, "b":2, "c":3}'::jsonb ?| array['b', 'c']
?&	text[]		配列の文字列のすべてがトップレベルのキーとして存在するか。		'["a", "b"]'::jsonb ?& array['a', 'b']


||	jsonb		2つのjsonb値を結合して、新しいjsonb値を作る				'["a", "b"]'::jsonb || '["c", "d"]'::jsonb

-	text		左のオペランドからキー／値のペア、あるいは文字列要素を削除する。 キー／値のペアはキーの値に基づいてマッチされる。 '{"a": "b"}'::jsonb - 'a'
-	integer		指定した添字の配列要素を削除する（負数の場合は後ろから数えます）。 トップレベルのコンテナが配列でないときはエラーが発生する。	      '["a", "b"]'::jsonb - 1
#-	text[]		指定したパスのフィールドまたは要素を削除する（JSON配列では、負数は後ろから数えます）						      '["a", {"b":1}]'::jsonb #- '{1,b}'
</pre>

<br>

%CHAPTER 解説

<p>
バージョン9.2からJSON型演算子がサポートされました。使用方法は上表の例を参照してください。
</p>

%SECTION JSON,JSONB共通の演算子

<pre>
SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
	"key2":[{"x":100},{"y":200},{"z":300}]}'::json;

SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
	"key2":[{"x":100},{"y":200},{"z":300}]}'::json->'key1';


SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
	"key2":[{"x":100},{"y":200},{"z":300}]}'::json->'key1'->>1;

testdb=# SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
testdb'#         "key2":[{"x":100},{"y":200},{"z":300}]}'::json;
                      json                       
-------------------------------------------------
 {"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}], +
         "key2":[{"x":100},{"y":200},{"z":300}]}
(1 row)

testdb=# SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
testdb'#         "key2":[{"x":100},{"y":200},{"z":300}]}'::json->'key1';
               ?column?                
---------------------------------------
 [{"a":"foo"},{"b":"bar"},{"c":"baz"}]
(1 row)

testdb=# SELECT '{"key1":[{"a":"foo"},{"b":"bar"},{"c":"baz"}],
testdb'#         "key2":[{"x":100},{"y":200},{"z":300}]}'::json->'key1'->>1;
  ?column?   
-------------
 {"b":"bar"}
(1 row)
</pre>


<pre>
SELECT 
'{ "name"   : "Alice Brown",
  "sku"    : "54321",
  "price"  : 199.95,
  "shipTo" : { "name" : "Bob Brown",
               "address" : "456 Oak Lane",
               "city" : "Pretendville",
               "state" : "HI",
               "zip"   : "98999" },
  "billTo" : { "name" : "John Smith",
               "address" : "123 Maple Street",
               "city" : "Pretendville",
               "state" : "NY",
               "zip"   : "12345" }
}'::json;

SELECT 
'{ "name"   : "Alice Brown",
  "sku"    : "54321",
  "price"  : 199.95,
  "shipTo" : { "name" : "Bob Brown",
               "address" : "456 Oak Lane",
               "city" : "Pretendville",
               "state" : "HI",
               "zip"   : "98999" },
  "billTo" : { "name" : "John Smith",
               "address" : "123 Maple Street",
               "city" : "Pretendville",
               "state" : "NY",
               "zip"   : "12345" }
}'::json#>'{shipTo}';

SELECT 
'{ "name"   : "Alice Brown",
  "sku"    : "54321",
  "price"  : 199.95,
  "shipTo" : { "name" : "Bob Brown",
               "address" : "456 Oak Lane",
               "city" : "Pretendville",
               "state" : "HI",
               "zip"   : "98999" },
  "billTo" : { "name" : "John Smith",
               "address" : "123 Maple Street",
               "city" : "Pretendville",
               "state" : "NY",
               "zip"   : "12345" }
}'::json#>'{shipTo,address}';


testdb=# SELECT
testdb-# '{ "name"   : "Alice Brown",
testdb'#   "sku"    : "54321",
testdb'#   "price"  : 199.95,
testdb'#   "shipTo" : { "name" : "Bob Brown",
testdb'#                "address" : "456 Oak Lane",
testdb'#                "city" : "Pretendville",
testdb'#                "state" : "HI",
testdb'#                "zip"   : "98999" },
testdb'#   "billTo" : { "name" : "John Smith",
testdb'#                "address" : "123 Maple Street",
testdb'#                "city" : "Pretendville",
testdb'#                "state" : "NY",
testdb'#                "zip"   : "12345" }
testdb'# }'::json#>'{shipTo}';
                  ?column?                  
--------------------------------------------
 { "name" : "Bob Brown",                   +
                "address" : "456 Oak Lane",+
                "city" : "Pretendville",   +
                "state" : "HI",            +
                "zip"   : "98999" }
(1 row)

testdb=# 
testdb=# SELECT
testdb-# '{ "name"   : "Alice Brown",
testdb'#   "sku"    : "54321",
testdb'#   "price"  : 199.95,
testdb'#   "shipTo" : { "name" : "Bob Brown",
testdb'#                "address" : "456 Oak Lane",
testdb'#                "city" : "Pretendville",
testdb'#                "state" : "HI",
testdb'#                "zip"   : "98999" },
testdb'#   "billTo" : { "name" : "John Smith",
testdb'#                "address" : "123 Maple Street",
testdb'#                "city" : "Pretendville",
testdb'#                "state" : "NY",
testdb'#                "zip"   : "12345" }
testdb'# }'::json#>'{shipTo,address}';
    ?column?    
----------------
 "456 Oak Lane"
(1 row)
</pre>

%SECTION JSONBのみ可能な演算子

<p>
JSONB型は大別すると4種類の演算子がサポートされています。
</p>

<p>
・包含するか否か
<br>
@>と<@はそれぞれ指定した値やJSONパスがJSONに含まれるか否かを調べるときに使います。
</p>

<pre>
SELECT '{"key1":{"a":"foo"},
       "key2":{"x":100}}'::jsonb @>'{"key1":{"a":"foo"}}';

SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
@>'{"member1":{"name":"Alice"}}';


SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 @>'{"member2":{"address":{"city":"sapporo", "pref":"hokkaido"}}}';


SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 @>'{"member2":{"address":{"city":"sapporo"}}}';


testdb=# SELECT '{"key1":{"a":"foo"},
testdb'#        "key2":{"x":100}}'::jsonb @>'{"key1":{"a":"foo"}}';
 ?column? 
----------
 t
(1 row)


testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  @>'{"member1":{"name":"Alice"}}';
 ?column? 
----------
 t
(1 row)


testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  @>'{"member2":{"address":{"city":"sapporo", "pref":"hokkaido"}}}';
 ?column? 
----------
 t
(1 row)

testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  @>'{"member2":{"address":{"city":"sapporo"}}}';
 ?column? 
----------
 t
(1 row)
</pre>


<p>
・存在するか否か
<br>

</p>

<pre>

SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ? 'member2';


SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ? 'member3';


SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ?| array['member1'];

SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ?& array['member1'];

SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ?& array['member1', 'member3'];



testdb=# SELECT '{"a":1, "b":2}'::jsonb ? 'b';
 ?column? 
----------
 t
(1 row)

testdb=# SELECT '{"a":1, "b":2}'::jsonb ? 'a';
 ?column? 
----------
 t
(1 row)

testdb=# SELECT '{"a":1, "b":2}'::jsonb ? 'c';
 ?column? 
----------
 f
(1 row)


testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  ? 'member2';
 ?column? 
----------
 t
(1 row)

testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  ? 'member3';
 ?column? 
----------
 f
(1 row)


testdb=# SELECT '{"a":1, "b":2, "c":3}'::jsonb ?| array['b', 'c'];
 ?column? 
----------
 t
(1 row)

testdb=# SELECT '{"a":1, "b":2, "c":3}'::jsonb ?| array['a', 'z'];
 ?column? 
----------
 t
(1 row)

testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  ?| array['member1'];
 ?column? 
----------
 t
(1 row)

testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  ?& array['member1'];
 ?column? 
----------
 t
(1 row)

testdb=# SELECT
testdb-# '{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
testdb'#   "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
testdb-#  ?& array['member1', 'member3'];
 ?column? 
----------
 f
(1 row)


testdb=# SELECT
'{"member1":{"name":"Alice", "address":{"city":"yokohama", "pref":"kanagawa"}},
  "member2":{"name":"Bob", "address":{"city":"sapporo", "pref":"hokkaido"}}}'::jsonb
 ?& array['name', 'address'];
 ?column? 
----------
 f
(1 row)

</pre>


<p>
・結合
<br>

</p>


<p>
・削除
<br>

</p>



<pre>
postgres=# SELECT '{"a": {"b":{"c": "foo"}}}'::jsonb @> '{"a":"foo"}'::jsonb;
 ?column? 
----------
 f
(1 row)

postgres=# SELECT '{"a": {"b":{"c": "foo"}}}'::jsonb @> '{"c":"foo"}'::jsonb;
 ?column? 
----------
 f
(1 row)
</pre>
