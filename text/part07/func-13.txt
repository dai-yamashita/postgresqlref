%FILE internal/func-13.html
%LASTMOD
%KEY pgsql-func13

%TITLE 汎用ファイルアクセス関数

[<汎用ファイルアクセス関数一覧>]

<pre>
関数   戻り型	説明
pg_ls_dir(dirname text [, missing_ok boolean, include_dot_dirs boolean])	setof text	ディレクトリの内容を一覧表示する
pg_read_file(filename text [, offset bigint, length bigint [, missing_ok boolean] ])  text	テキストファイルの内容を返す
pg_read_binary_file(filename text [, offset bigint, length bigint [, missing_ok boolean] ]) 	bytea	ファイルの内容を返す
pg_stat_file(filename text[, missing_ok boolean])   record ファイルについての情報を返す
</pre>

%CHAPTER 解説

<p>
上に示した汎用ファイルアクセス関数で、ファイル構成やファイル内容を読み込んだり、ファイルの状態(state)を表示させることができます。
</p>

<p>
オプションmissing_okは、ファイルやディレクトリが存在しない場合の振る舞いを指定します。trueの場合はNULLを返し、falseの場合はERRORを返します。デフォルトはfalseです。
</p>


<p>
・pg_ls_dir()
<br>
pg_ls_dir()関数は指定したディレクトリの構造を返します。もっとも簡単な実行例を以下に示します。
</p>

<pre>
testdb=# SELECT pg_ls_dir('/usr/local/pgsql/data/base');
 pg_ls_dir 
-----------
 1
 13289
 13294
 16384
 16709
 pgsql_tmp
(6 rows)
</pre>

<p>
・pg_read_file(), pg_read_binary_file()
<br>
pg_read_file()関数とpg_read_binary_file()関数は、指定したファイルの、指定したoffsetから、最大で指定したlengthバイトを読み出します。以下にpg_read_file()関数の実行例を示します。
</p>

<pre>
testdb=# SELECT pg_read_file('/usr/local/pgsql/data/postmaster.pid');
     pg_read_file      
-----------------------
 24010                +
 /usr/local/pgsql/data+
 1461736424           +
 5432                 +
 /tmp                 +
 localhost            +
   5432001    851968  +
 
(1 row)
</pre>

<p>
・pg_stat_file()
<br>
pg_stat_file()関数は指定したファイルの状態、UNIXのstatコマンドの出力と同じものを返します。
以下に実行例を示します。
</p>

<pre>
testdb=# SELECT pg_stat_file('/usr/local/pgsql/data/postmaster.pid');
                                    pg_stat_file                                    
------------------------------------------------------------------------------------
 (79,"2016-05-05 05:58:45+00","2016-04-27 05:53:44+00","2016-04-27 05:53:44+00",,f)
(1 row)
</pre>
