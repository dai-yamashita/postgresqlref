
%FILE internal/plpgsql-17.html
%LASTMOD
%KEY pgsql-plpgsql17

%TITLE FETCH文によるカーソル行の取得		FETCH

<pre>
[<書式>]

● カーソルの取り出し
FETCH [ direction { FROM | IN } ] cursor INTO target 

● カーソル移動
MOVE [ direction { FROM | IN } ] cursor;
			       (バージョン8.3から)

● 取り出した行の更新
UPDATE table SET ... WHERE CURRENT OF cursor

			       (バージョン8.3から)

● 取り出した行の削除
DELETE FROM table WHERE CURRENT OF cursor
			       (バージョン8.3から)

======================================================
パラメータ	説明
======================================================
cursor		カーソル変数
target		取り出したデータを格納する変数
======================================================

======================================================
direction	説明
======================================================
NEXT		次の行(countに1を指定することと同じ) 。デフォルト。バージョン8.3から
PRIOR		前の行(countに−1を指定することと同じ)。バージョン8.3から
FIRST		先頭行(ABSOLUTE 1を指定することと同じ)。バージョン8.3から
LAST		最終行(ABSOLUTE -1を指定することと同じ)。バージョン8.3から
ABSOLUTE count	先頭からcount番目の行を取り出す。バージョン8.3から
RELATIVE count	先頭からcount番目以降の行を取り出す。バージョン8.3から
FORWARD		 NEXTと同じ。次の行を取り出す。(countに1を指定することと同じ) 。バージョン8.3から
BACKWARD	 PRIORと同じ。前の行(countに-1を指定することと同じ) 。バージョン8.3から
======================================================
</pre>

[<解説>]
<p>
FETCH文を使ってカーソルから行を取り出します。
</p>

<p>
FETCHはSELECT INTOと同様に、カーソルから次の行を抽出し、対象に格納します。対象とは、行変数、レコード変数、または単純な変数をカンマで区切ったリストです。 SELECT INTOの場合と同様、特殊なFOUND変数を検査することで、行が入手できたかどうかを確認することができます。
</p>

<p>
direction句は複数行を取り出すことができるコマンドを除き、SQL FETCHで許可されたどのようなコマンドも可能です。すなわち、以下のものです。 NEXT、 PRIOR、 FIRST、 LAST、 ABSOLUTE count、 RELATIVE count、 FORWARDまたは BACKWARD。 direction句の省略は、NEXTの指定と同じです。 SCROLLオプションを用いてカーソルを宣言または開かないと、directionの値による逆方向への移動の要求は失敗します。
</p>

<p>
cursor名は、開いているカーソルのポータルを参照するrefcursor変数名でなければなりません。
</p>


例：
<pre>
FETCH curs1 INTO rowvar;
FETCH curs2 INTO foo, bar, baz;
FETCH LAST FROM curs3 INTO x, y;
FETCH RELATIVE -2 FROM curs4 INTO x;
</pre>

39.7.3.2. MOVE

<pre>
MOVE [ direction { FROM | IN } ] cursor;
</pre>

<p>
MOVEコマンドは、データを取り出さないでカーソルの位置を変更します。移動先の行を返さないでカーソルの位置だけを変更することを除けば、FETCHコマンドと同一の働きをします。 SELECT INTOと同様に、特殊な変数FOUNDを用いて、移動先に行が存在するかどうかを検査できます。
</p>

<p>
direction句は、FETCH SQLコマンドで許されている以下の値のいずれかを取ることができます。 NEXT、 PRIOR、 FIRST、 LAST、 ABSOLUTE count、 RELATIVE count、 ALL、 FORWARD [ count | ALL ]、または BACKWARD [ count | ALL ] direction句の省略は、NEXTの指定と同じです。 SCROLLオプションを用いてカーソルを宣言または開かないと、directionの値による逆方向への移動の要求は失敗します。
</p>

例:

<pre>
MOVE curs1;
MOVE LAST FROM curs3;
MOVE RELATIVE -2 FROM curs4;
MOVE FORWARD 2 FROM curs4;
</pre>

39.7.3.3. UPDATE/DELETE WHERE CURRENT OF

<pre>
UPDATE table SET ... WHERE CURRENT OF cursor;
DELETE FROM table WHERE CURRENT OF cursor;
</pre>

<p>
カーソルの位置をテーブルの行に変更すれば、カーソルによって特定した行を更新または消去できます。カーソル問い合わせは何が許されているのか（特にグループ化しないとき）についての制限があり、それはカーソル内でFOR UPDATEを使用することが最善です。より詳細についてはDECLAREマニュアルページを参照下さい。
</p>

<p>
以下に例を示します。
</p>

<pre>
UPDATE foo SET dataval = myval WHERE CURRENT OF curs1;
</pre>



[<プログラム例>]

<p>
・カーソルにより取り出した行を行変数に代入<br>
カーソルcursorから取り出した行を、行変数customer_dataに代入します。
</p>


<pre>
FETCH cursor INTO customer_data; 
</pre>

<p>
・カーソルにより取り出した行を複数の変数に代入<br>
カーソルcursorから取り出した行のデータを、変数id,name,companycodeに代入します。各変数は適当なデータ型で定義されているものとします([<補足 1>])。
<p>

<pre>
FETCH cursor INTO id, name, companycode; 
</pre>

[<補足>]

<p>
(1)
SELECT INTO 文([<8-06>])と同様、boolean型変数FOUNDを検査することで、FETCH文が変数に値を代入できたか否かを知ることができます。
</p>
